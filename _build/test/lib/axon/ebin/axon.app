{application,axon,
             [{modules,['Elixir.Axon','Elixir.Axon.Activations',
                        'Elixir.Axon.CompileError','Elixir.Axon.Compiler',
                        'Elixir.Axon.Defn','Elixir.Axon.Display',
                        'Elixir.Axon.Initializers','Elixir.Axon.Layers',
                        'Elixir.Axon.Loop','Elixir.Axon.Loop.State',
                        'Elixir.Axon.LossScale','Elixir.Axon.Losses',
                        'Elixir.Axon.Metrics','Elixir.Axon.MixedPrecision',
                        'Elixir.Axon.MixedPrecision.Policy',
                        'Elixir.Axon.ModelState','Elixir.Axon.Node',
                        'Elixir.Axon.None','Elixir.Axon.Optimizers',
                        'Elixir.Axon.Parameter','Elixir.Axon.Quantization',
                        'Elixir.Axon.Quantization.Layers',
                        'Elixir.Axon.Quantization.QTensor',
                        'Elixir.Axon.Schedules','Elixir.Axon.Shape',
                        'Elixir.Axon.Shared','Elixir.Axon.StatefulOutput',
                        'Elixir.Axon.Updates','Elixir.Inspect.Axon',
                        'Elixir.Inspect.Axon.Loop',
                        'Elixir.Inspect.Axon.MixedPrecision.Policy',
                        'Elixir.Inspect.Axon.ModelState',
                        'Elixir.Inspect.Axon.None',
                        'Elixir.Nx.Container.Axon.ModelState',
                        'Elixir.Nx.Container.Axon.None',
                        'Elixir.Nx.Container.Axon.Quantization.QTensor',
                        'Elixir.Nx.Container.Axon.StatefulOutput']},
              {optional_applications,[table_rex,kino,kino_vega_lite]},
              {applications,[kernel,stdlib,elixir,logger,nx,table_rex,kino,
                             kino_vega_lite,polaris]},
              {description,"Create and train neural networks in Elixir"},
              {registered,[]},
              {vsn,"0.7.0"}]}.
